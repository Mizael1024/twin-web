import { videosApi } from '../api/videos';

export interface Video {
  title: string;
  id: string;
  src: string;
  created_at: Date;
  user_id?: string | null;
}

export const videoService = {
  async getVideos(userId?: string): Promise<Video[]> {
    try {
      console.log('üìä [VideoService] Buscando v√≠deos...');
      const videos = await videosApi.getVideos(userId);
      console.log('‚úÖ [VideoService] V√≠deos encontrados:', videos.length);
      return videos;
    } catch (error) {
      console.error('‚ùå [VideoService] Erro ao buscar v√≠deos:', error);
      throw error;
    }
  },

  async addVideo(src: string): Promise<Video> {
    try {
      console.log('‚ûï [VideoService] Adicionando v√≠deo:', src);
      const video = await videosApi.addVideo(src);
      console.log('‚úÖ [VideoService] V√≠deo adicionado:', video);
      return video;
    } catch (error) {
      console.error('‚ùå [VideoService] Erro ao adicionar v√≠deo:', error);
      throw error;
    }
  },

  async removeVideo(id: string): Promise<void> {
    try {
      console.log('üóëÔ∏è [VideoService] Removendo v√≠deo:', id);
      await videosApi.removeVideo(id);
      console.log('‚úÖ [VideoService] V√≠deo removido');
    } catch (error) {
      console.error('‚ùå [VideoService] Erro ao remover v√≠deo:', error);
      throw error;
    }
  },
};
